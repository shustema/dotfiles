
QM - Quine McCluskey Tabular Reduction
N_BITS = 5
0 cube: 0 0 1 9 5 1 
 G0[0]-G1[0] G1[0]-G2[1] G2[1]-G3[9] G3[9]-G4[5] G4[5]-G5[1]
1 cube: 0 0 3 18 5 
 G0[0]-G1[0] G1[0]-G2[3] G2[3]-G3[18] G3[18]-G4[5]
2 cube: 0 0 3 9 
 G0[0]-G1[0] G1[0]-G2[3] G2[3]-G3[9]
3 cube: 0 0 1 
 G0[0]-G1[0] G1[0]-G2[1]
4 cube: 0 0 
 G0[0]-G1[0]
2_bit ( A(0), A(1), B(0), B(1), Cin ) = m7+m13+m14+m15+m19+m20+m21+m22+m23+m25+m26+m27+m28+m29+m30+m31
FINAL PIs: 
PI_0:	1-1--  =>  cover for minterms:
	20	21	22	23	28	29	30	31
PI_1:	-111-  =>  cover for minterms:
	14	15	30	31
PI_2:	11-1-  =>  cover for minterms:
	26	27	30	31
PI_3:	-11-1  =>  cover for minterms:
	13	15	29	31
PI_4:	11--1  =>  cover for minterms:
	25	27	29	31
PI_5:	1--11  =>  cover for minterms:
	19	23	27	31
PI_6:	--111  =>  cover for minterms:
	7	15	23	31
2_bit ( A(0), A(1), B(0), B(1), Cin ) = 
   Sm(  7, 13, 14, 15, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31)
PI_0:	                    *   *   *   *               *   *   *   *   
PI_1:	        *   *                                           *   *   
PI_2:	                                        *   *           *   *   
PI_3:	    *       *                                       *       *   
PI_4:	                                    *       *       *       *   
PI_5:	                *               *           *               *   
PI_6:	*           *                   *                           *   
  -- SOP form of output expresson -- NOTE: not all PIs may be essential
  2_bit <= (A(0) and B(0)) or (A(1) and B(0) and B(1)) or (A(0) and A(1) and B(1)) or (A(1) and B(0) and Cin) or (A(0) and A(1) and Cin) or (A(0) and B(1) and Cin) or (B(0) and B(1) and Cin) ;
